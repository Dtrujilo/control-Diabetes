#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Control_Tipos_Diabetes
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SISTEMA_DIABETES")]
	public partial class ConexionBDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertALERTAS(ALERTAS instance);
    partial void UpdateALERTAS(ALERTAS instance);
    partial void DeleteALERTAS(ALERTAS instance);
    partial void InsertCITAS(CITAS instance);
    partial void UpdateCITAS(CITAS instance);
    partial void DeleteCITAS(CITAS instance);
    partial void InsertEMPRESAS(EMPRESAS instance);
    partial void UpdateEMPRESAS(EMPRESAS instance);
    partial void DeleteEMPRESAS(EMPRESAS instance);
    partial void InsertENCARGADOS(ENCARGADOS instance);
    partial void UpdateENCARGADOS(ENCARGADOS instance);
    partial void DeleteENCARGADOS(ENCARGADOS instance);
    partial void InsertEXAMENES(EXAMENES instance);
    partial void UpdateEXAMENES(EXAMENES instance);
    partial void DeleteEXAMENES(EXAMENES instance);
    partial void InsertFACTURA_CITAS(FACTURA_CITAS instance);
    partial void UpdateFACTURA_CITAS(FACTURA_CITAS instance);
    partial void DeleteFACTURA_CITAS(FACTURA_CITAS instance);
    partial void InsertHISTORIAL_MEDICO(HISTORIAL_MEDICO instance);
    partial void UpdateHISTORIAL_MEDICO(HISTORIAL_MEDICO instance);
    partial void DeleteHISTORIAL_MEDICO(HISTORIAL_MEDICO instance);
    partial void InsertMEDICAMENTOS(MEDICAMENTOS instance);
    partial void UpdateMEDICAMENTOS(MEDICAMENTOS instance);
    partial void DeleteMEDICAMENTOS(MEDICAMENTOS instance);
    partial void InsertMEDIDAS(MEDIDAS instance);
    partial void UpdateMEDIDAS(MEDIDAS instance);
    partial void DeleteMEDIDAS(MEDIDAS instance);
    partial void InsertPACIENTES(PACIENTES instance);
    partial void UpdatePACIENTES(PACIENTES instance);
    partial void DeletePACIENTES(PACIENTES instance);
    partial void InsertTIPO_DIABETES(TIPO_DIABETES instance);
    partial void UpdateTIPO_DIABETES(TIPO_DIABETES instance);
    partial void DeleteTIPO_DIABETES(TIPO_DIABETES instance);
    partial void InsertUSUARIOS(USUARIOS instance);
    partial void UpdateUSUARIOS(USUARIOS instance);
    partial void DeleteUSUARIOS(USUARIOS instance);
    #endregion
		
		public ConexionBDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionBDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionBDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionBDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ALERTAS> ALERTAS
		{
			get
			{
				return this.GetTable<ALERTAS>();
			}
		}
		
		public System.Data.Linq.Table<CITAS> CITAS
		{
			get
			{
				return this.GetTable<CITAS>();
			}
		}
		
		public System.Data.Linq.Table<DETALLE_EXAMEN> DETALLE_EXAMEN
		{
			get
			{
				return this.GetTable<DETALLE_EXAMEN>();
			}
		}
		
		public System.Data.Linq.Table<EMPRESAS> EMPRESAS
		{
			get
			{
				return this.GetTable<EMPRESAS>();
			}
		}
		
		public System.Data.Linq.Table<ENCARGADOS> ENCARGADOS
		{
			get
			{
				return this.GetTable<ENCARGADOS>();
			}
		}
		
		public System.Data.Linq.Table<EXAMENES> EXAMENES
		{
			get
			{
				return this.GetTable<EXAMENES>();
			}
		}
		
		public System.Data.Linq.Table<FACTURA_CITAS> FACTURA_CITAS
		{
			get
			{
				return this.GetTable<FACTURA_CITAS>();
			}
		}
		
		public System.Data.Linq.Table<HISTORIAL_MEDICO> HISTORIAL_MEDICO
		{
			get
			{
				return this.GetTable<HISTORIAL_MEDICO>();
			}
		}
		
		public System.Data.Linq.Table<MEDICAMENTOS> MEDICAMENTOS
		{
			get
			{
				return this.GetTable<MEDICAMENTOS>();
			}
		}
		
		public System.Data.Linq.Table<MEDIDAS> MEDIDAS
		{
			get
			{
				return this.GetTable<MEDIDAS>();
			}
		}
		
		public System.Data.Linq.Table<PACIENTES> PACIENTES
		{
			get
			{
				return this.GetTable<PACIENTES>();
			}
		}
		
		public System.Data.Linq.Table<PACIENTES_EXAMENES> PACIENTES_EXAMENES
		{
			get
			{
				return this.GetTable<PACIENTES_EXAMENES>();
			}
		}
		
		public System.Data.Linq.Table<TIPO_DIABETES> TIPO_DIABETES
		{
			get
			{
				return this.GetTable<TIPO_DIABETES>();
			}
		}
		
		public System.Data.Linq.Table<USUARIOS> USUARIOS
		{
			get
			{
				return this.GetTable<USUARIOS>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ALERTAS")]
	public partial class ALERTAS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ALERTA;
		
		private System.Nullable<int> _ID_PACIENTE;
		
		private System.Nullable<int> _ID_MEDIDAS;
		
		private System.Nullable<System.TimeSpan> _HORA;
		
		private EntityRef<MEDIDAS> _MEDIDAS;
		
		private EntityRef<PACIENTES> _PACIENTES;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ALERTAChanging(int value);
    partial void OnID_ALERTAChanged();
    partial void OnID_PACIENTEChanging(System.Nullable<int> value);
    partial void OnID_PACIENTEChanged();
    partial void OnID_MEDIDASChanging(System.Nullable<int> value);
    partial void OnID_MEDIDASChanged();
    partial void OnHORAChanging(System.Nullable<System.TimeSpan> value);
    partial void OnHORAChanged();
    #endregion
		
		public ALERTAS()
		{
			this._MEDIDAS = default(EntityRef<MEDIDAS>);
			this._PACIENTES = default(EntityRef<PACIENTES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ALERTA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ALERTA
		{
			get
			{
				return this._ID_ALERTA;
			}
			set
			{
				if ((this._ID_ALERTA != value))
				{
					this.OnID_ALERTAChanging(value);
					this.SendPropertyChanging();
					this._ID_ALERTA = value;
					this.SendPropertyChanged("ID_ALERTA");
					this.OnID_ALERTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PACIENTE", DbType="Int")]
		public System.Nullable<int> ID_PACIENTE
		{
			get
			{
				return this._ID_PACIENTE;
			}
			set
			{
				if ((this._ID_PACIENTE != value))
				{
					if (this._PACIENTES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PACIENTEChanging(value);
					this.SendPropertyChanging();
					this._ID_PACIENTE = value;
					this.SendPropertyChanged("ID_PACIENTE");
					this.OnID_PACIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MEDIDAS", DbType="Int")]
		public System.Nullable<int> ID_MEDIDAS
		{
			get
			{
				return this._ID_MEDIDAS;
			}
			set
			{
				if ((this._ID_MEDIDAS != value))
				{
					if (this._MEDIDAS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MEDIDASChanging(value);
					this.SendPropertyChanging();
					this._ID_MEDIDAS = value;
					this.SendPropertyChanged("ID_MEDIDAS");
					this.OnID_MEDIDASChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HORA", DbType="Time")]
		public System.Nullable<System.TimeSpan> HORA
		{
			get
			{
				return this._HORA;
			}
			set
			{
				if ((this._HORA != value))
				{
					this.OnHORAChanging(value);
					this.SendPropertyChanging();
					this._HORA = value;
					this.SendPropertyChanged("HORA");
					this.OnHORAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDIDAS_ALERTAS", Storage="_MEDIDAS", ThisKey="ID_MEDIDAS", OtherKey="ID_MEDIDA", IsForeignKey=true)]
		public MEDIDAS MEDIDAS
		{
			get
			{
				return this._MEDIDAS.Entity;
			}
			set
			{
				MEDIDAS previousValue = this._MEDIDAS.Entity;
				if (((previousValue != value) 
							|| (this._MEDIDAS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MEDIDAS.Entity = null;
						previousValue.ALERTAS.Remove(this);
					}
					this._MEDIDAS.Entity = value;
					if ((value != null))
					{
						value.ALERTAS.Add(this);
						this._ID_MEDIDAS = value.ID_MEDIDA;
					}
					else
					{
						this._ID_MEDIDAS = default(Nullable<int>);
					}
					this.SendPropertyChanged("MEDIDAS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTES_ALERTAS", Storage="_PACIENTES", ThisKey="ID_PACIENTE", OtherKey="ID_PACIENTE", IsForeignKey=true)]
		public PACIENTES PACIENTES
		{
			get
			{
				return this._PACIENTES.Entity;
			}
			set
			{
				PACIENTES previousValue = this._PACIENTES.Entity;
				if (((previousValue != value) 
							|| (this._PACIENTES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENTES.Entity = null;
						previousValue.ALERTAS.Remove(this);
					}
					this._PACIENTES.Entity = value;
					if ((value != null))
					{
						value.ALERTAS.Add(this);
						this._ID_PACIENTE = value.ID_PACIENTE;
					}
					else
					{
						this._ID_PACIENTE = default(Nullable<int>);
					}
					this.SendPropertyChanged("PACIENTES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CITAS")]
	public partial class CITAS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CITA;
		
		private System.Nullable<System.DateTime> _FECHA;
		
		private System.Nullable<System.TimeSpan> _HORA;
		
		private string _MOTIVO_CITA;
		
		private System.Nullable<int> _ID_PACIENTE;
		
		private EntityRef<PACIENTES> _PACIENTES;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CITAChanging(int value);
    partial void OnID_CITAChanged();
    partial void OnFECHAChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHAChanged();
    partial void OnHORAChanging(System.Nullable<System.TimeSpan> value);
    partial void OnHORAChanged();
    partial void OnMOTIVO_CITAChanging(string value);
    partial void OnMOTIVO_CITAChanged();
    partial void OnID_PACIENTEChanging(System.Nullable<int> value);
    partial void OnID_PACIENTEChanged();
    #endregion
		
		public CITAS()
		{
			this._PACIENTES = default(EntityRef<PACIENTES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CITA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_CITA
		{
			get
			{
				return this._ID_CITA;
			}
			set
			{
				if ((this._ID_CITA != value))
				{
					this.OnID_CITAChanging(value);
					this.SendPropertyChanging();
					this._ID_CITA = value;
					this.SendPropertyChanged("ID_CITA");
					this.OnID_CITAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA", DbType="Date")]
		public System.Nullable<System.DateTime> FECHA
		{
			get
			{
				return this._FECHA;
			}
			set
			{
				if ((this._FECHA != value))
				{
					this.OnFECHAChanging(value);
					this.SendPropertyChanging();
					this._FECHA = value;
					this.SendPropertyChanged("FECHA");
					this.OnFECHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HORA", DbType="Time")]
		public System.Nullable<System.TimeSpan> HORA
		{
			get
			{
				return this._HORA;
			}
			set
			{
				if ((this._HORA != value))
				{
					this.OnHORAChanging(value);
					this.SendPropertyChanging();
					this._HORA = value;
					this.SendPropertyChanged("HORA");
					this.OnHORAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTIVO_CITA", DbType="VarChar(1000)")]
		public string MOTIVO_CITA
		{
			get
			{
				return this._MOTIVO_CITA;
			}
			set
			{
				if ((this._MOTIVO_CITA != value))
				{
					this.OnMOTIVO_CITAChanging(value);
					this.SendPropertyChanging();
					this._MOTIVO_CITA = value;
					this.SendPropertyChanged("MOTIVO_CITA");
					this.OnMOTIVO_CITAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PACIENTE", DbType="Int")]
		public System.Nullable<int> ID_PACIENTE
		{
			get
			{
				return this._ID_PACIENTE;
			}
			set
			{
				if ((this._ID_PACIENTE != value))
				{
					if (this._PACIENTES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PACIENTEChanging(value);
					this.SendPropertyChanging();
					this._ID_PACIENTE = value;
					this.SendPropertyChanged("ID_PACIENTE");
					this.OnID_PACIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTES_CITAS", Storage="_PACIENTES", ThisKey="ID_PACIENTE", OtherKey="ID_PACIENTE", IsForeignKey=true)]
		public PACIENTES PACIENTES
		{
			get
			{
				return this._PACIENTES.Entity;
			}
			set
			{
				PACIENTES previousValue = this._PACIENTES.Entity;
				if (((previousValue != value) 
							|| (this._PACIENTES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENTES.Entity = null;
						previousValue.CITAS.Remove(this);
					}
					this._PACIENTES.Entity = value;
					if ((value != null))
					{
						value.CITAS.Add(this);
						this._ID_PACIENTE = value.ID_PACIENTE;
					}
					else
					{
						this._ID_PACIENTE = default(Nullable<int>);
					}
					this.SendPropertyChanged("PACIENTES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DETALLE_EXAMEN")]
	public partial class DETALLE_EXAMEN
	{
		
		private System.Nullable<int> _ID_EXAMEN;
		
		private string _RESULTADO;
		
		public DETALLE_EXAMEN()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_EXAMEN", DbType="Int")]
		public System.Nullable<int> ID_EXAMEN
		{
			get
			{
				return this._ID_EXAMEN;
			}
			set
			{
				if ((this._ID_EXAMEN != value))
				{
					this._ID_EXAMEN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESULTADO", DbType="VarChar(50)")]
		public string RESULTADO
		{
			get
			{
				return this._RESULTADO;
			}
			set
			{
				if ((this._RESULTADO != value))
				{
					this._RESULTADO = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPRESAS")]
	public partial class EMPRESAS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_EMPRESA;
		
		private string _NOMBRE;
		
		private string _DIRECCION;
		
		private string _TELEFONO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_EMPRESAChanging(int value);
    partial void OnID_EMPRESAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnDIRECCIONChanging(string value);
    partial void OnDIRECCIONChanged();
    partial void OnTELEFONOChanging(string value);
    partial void OnTELEFONOChanged();
    #endregion
		
		public EMPRESAS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_EMPRESA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_EMPRESA
		{
			get
			{
				return this._ID_EMPRESA;
			}
			set
			{
				if ((this._ID_EMPRESA != value))
				{
					this.OnID_EMPRESAChanging(value);
					this.SendPropertyChanging();
					this._ID_EMPRESA = value;
					this.SendPropertyChanged("ID_EMPRESA");
					this.OnID_EMPRESAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(100)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIRECCION", DbType="VarChar(100)")]
		public string DIRECCION
		{
			get
			{
				return this._DIRECCION;
			}
			set
			{
				if ((this._DIRECCION != value))
				{
					this.OnDIRECCIONChanging(value);
					this.SendPropertyChanging();
					this._DIRECCION = value;
					this.SendPropertyChanged("DIRECCION");
					this.OnDIRECCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONO", DbType="VarChar(25)")]
		public string TELEFONO
		{
			get
			{
				return this._TELEFONO;
			}
			set
			{
				if ((this._TELEFONO != value))
				{
					this.OnTELEFONOChanging(value);
					this.SendPropertyChanging();
					this._TELEFONO = value;
					this.SendPropertyChanged("TELEFONO");
					this.OnTELEFONOChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ENCARGADOS")]
	public partial class ENCARGADOS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ENCARGADO;
		
		private System.Nullable<int> _ID_PACIENTE;
		
		private string _NOMBRES;
		
		private string _APELLIDOS;
		
		private string _PARENTESCO;
		
		private System.Nullable<int> _DPI;
		
		private System.Nullable<int> _TELEFONO;
		
		private EntityRef<PACIENTES> _PACIENTES;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ENCARGADOChanging(int value);
    partial void OnID_ENCARGADOChanged();
    partial void OnID_PACIENTEChanging(System.Nullable<int> value);
    partial void OnID_PACIENTEChanged();
    partial void OnNOMBRESChanging(string value);
    partial void OnNOMBRESChanged();
    partial void OnAPELLIDOSChanging(string value);
    partial void OnAPELLIDOSChanged();
    partial void OnPARENTESCOChanging(string value);
    partial void OnPARENTESCOChanged();
    partial void OnDPIChanging(System.Nullable<int> value);
    partial void OnDPIChanged();
    partial void OnTELEFONOChanging(System.Nullable<int> value);
    partial void OnTELEFONOChanged();
    #endregion
		
		public ENCARGADOS()
		{
			this._PACIENTES = default(EntityRef<PACIENTES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ENCARGADO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ENCARGADO
		{
			get
			{
				return this._ID_ENCARGADO;
			}
			set
			{
				if ((this._ID_ENCARGADO != value))
				{
					this.OnID_ENCARGADOChanging(value);
					this.SendPropertyChanging();
					this._ID_ENCARGADO = value;
					this.SendPropertyChanged("ID_ENCARGADO");
					this.OnID_ENCARGADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PACIENTE", DbType="Int")]
		public System.Nullable<int> ID_PACIENTE
		{
			get
			{
				return this._ID_PACIENTE;
			}
			set
			{
				if ((this._ID_PACIENTE != value))
				{
					if (this._PACIENTES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PACIENTEChanging(value);
					this.SendPropertyChanging();
					this._ID_PACIENTE = value;
					this.SendPropertyChanged("ID_PACIENTE");
					this.OnID_PACIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRES", DbType="VarChar(100)")]
		public string NOMBRES
		{
			get
			{
				return this._NOMBRES;
			}
			set
			{
				if ((this._NOMBRES != value))
				{
					this.OnNOMBRESChanging(value);
					this.SendPropertyChanging();
					this._NOMBRES = value;
					this.SendPropertyChanged("NOMBRES");
					this.OnNOMBRESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APELLIDOS", DbType="VarChar(100)")]
		public string APELLIDOS
		{
			get
			{
				return this._APELLIDOS;
			}
			set
			{
				if ((this._APELLIDOS != value))
				{
					this.OnAPELLIDOSChanging(value);
					this.SendPropertyChanging();
					this._APELLIDOS = value;
					this.SendPropertyChanged("APELLIDOS");
					this.OnAPELLIDOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARENTESCO", DbType="VarChar(100)")]
		public string PARENTESCO
		{
			get
			{
				return this._PARENTESCO;
			}
			set
			{
				if ((this._PARENTESCO != value))
				{
					this.OnPARENTESCOChanging(value);
					this.SendPropertyChanging();
					this._PARENTESCO = value;
					this.SendPropertyChanged("PARENTESCO");
					this.OnPARENTESCOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPI", DbType="Int")]
		public System.Nullable<int> DPI
		{
			get
			{
				return this._DPI;
			}
			set
			{
				if ((this._DPI != value))
				{
					this.OnDPIChanging(value);
					this.SendPropertyChanging();
					this._DPI = value;
					this.SendPropertyChanged("DPI");
					this.OnDPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONO", DbType="Int")]
		public System.Nullable<int> TELEFONO
		{
			get
			{
				return this._TELEFONO;
			}
			set
			{
				if ((this._TELEFONO != value))
				{
					this.OnTELEFONOChanging(value);
					this.SendPropertyChanging();
					this._TELEFONO = value;
					this.SendPropertyChanged("TELEFONO");
					this.OnTELEFONOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTES_ENCARGADOS", Storage="_PACIENTES", ThisKey="ID_PACIENTE", OtherKey="ID_PACIENTE", IsForeignKey=true)]
		public PACIENTES PACIENTES
		{
			get
			{
				return this._PACIENTES.Entity;
			}
			set
			{
				PACIENTES previousValue = this._PACIENTES.Entity;
				if (((previousValue != value) 
							|| (this._PACIENTES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENTES.Entity = null;
						previousValue.ENCARGADOS.Remove(this);
					}
					this._PACIENTES.Entity = value;
					if ((value != null))
					{
						value.ENCARGADOS.Add(this);
						this._ID_PACIENTE = value.ID_PACIENTE;
					}
					else
					{
						this._ID_PACIENTE = default(Nullable<int>);
					}
					this.SendPropertyChanged("PACIENTES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EXAMENES")]
	public partial class EXAMENES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_EXAMEN;
		
		private string _NOMBRE;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_EXAMENChanging(int value);
    partial void OnID_EXAMENChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public EXAMENES()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_EXAMEN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_EXAMEN
		{
			get
			{
				return this._ID_EXAMEN;
			}
			set
			{
				if ((this._ID_EXAMEN != value))
				{
					this.OnID_EXAMENChanging(value);
					this.SendPropertyChanging();
					this._ID_EXAMEN = value;
					this.SendPropertyChanged("ID_EXAMEN");
					this.OnID_EXAMENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(100)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FACTURA_CITAS")]
	public partial class FACTURA_CITAS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_FACTURA_CITA;
		
		private System.Nullable<int> _ID_USUARIO;
		
		private System.Nullable<int> _ID_PACIENTE;
		
		private string _DETALLE;
		
		private System.Nullable<decimal> _TOTAL;
		
		private EntityRef<PACIENTES> _PACIENTES;
		
		private EntityRef<USUARIOS> _USUARIOS;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_FACTURA_CITAChanging(int value);
    partial void OnID_FACTURA_CITAChanged();
    partial void OnID_USUARIOChanging(System.Nullable<int> value);
    partial void OnID_USUARIOChanged();
    partial void OnID_PACIENTEChanging(System.Nullable<int> value);
    partial void OnID_PACIENTEChanged();
    partial void OnDETALLEChanging(string value);
    partial void OnDETALLEChanged();
    partial void OnTOTALChanging(System.Nullable<decimal> value);
    partial void OnTOTALChanged();
    #endregion
		
		public FACTURA_CITAS()
		{
			this._PACIENTES = default(EntityRef<PACIENTES>);
			this._USUARIOS = default(EntityRef<USUARIOS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_FACTURA_CITA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_FACTURA_CITA
		{
			get
			{
				return this._ID_FACTURA_CITA;
			}
			set
			{
				if ((this._ID_FACTURA_CITA != value))
				{
					this.OnID_FACTURA_CITAChanging(value);
					this.SendPropertyChanging();
					this._ID_FACTURA_CITA = value;
					this.SendPropertyChanged("ID_FACTURA_CITA");
					this.OnID_FACTURA_CITAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USUARIO", DbType="Int")]
		public System.Nullable<int> ID_USUARIO
		{
			get
			{
				return this._ID_USUARIO;
			}
			set
			{
				if ((this._ID_USUARIO != value))
				{
					if (this._USUARIOS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_USUARIOChanging(value);
					this.SendPropertyChanging();
					this._ID_USUARIO = value;
					this.SendPropertyChanged("ID_USUARIO");
					this.OnID_USUARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PACIENTE", DbType="Int")]
		public System.Nullable<int> ID_PACIENTE
		{
			get
			{
				return this._ID_PACIENTE;
			}
			set
			{
				if ((this._ID_PACIENTE != value))
				{
					if (this._PACIENTES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PACIENTEChanging(value);
					this.SendPropertyChanging();
					this._ID_PACIENTE = value;
					this.SendPropertyChanged("ID_PACIENTE");
					this.OnID_PACIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DETALLE", DbType="VarChar(150)")]
		public string DETALLE
		{
			get
			{
				return this._DETALLE;
			}
			set
			{
				if ((this._DETALLE != value))
				{
					this.OnDETALLEChanging(value);
					this.SendPropertyChanging();
					this._DETALLE = value;
					this.SendPropertyChanged("DETALLE");
					this.OnDETALLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this.OnTOTALChanging(value);
					this.SendPropertyChanging();
					this._TOTAL = value;
					this.SendPropertyChanged("TOTAL");
					this.OnTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTES_FACTURA_CITAS", Storage="_PACIENTES", ThisKey="ID_PACIENTE", OtherKey="ID_PACIENTE", IsForeignKey=true)]
		public PACIENTES PACIENTES
		{
			get
			{
				return this._PACIENTES.Entity;
			}
			set
			{
				PACIENTES previousValue = this._PACIENTES.Entity;
				if (((previousValue != value) 
							|| (this._PACIENTES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENTES.Entity = null;
						previousValue.FACTURA_CITAS.Remove(this);
					}
					this._PACIENTES.Entity = value;
					if ((value != null))
					{
						value.FACTURA_CITAS.Add(this);
						this._ID_PACIENTE = value.ID_PACIENTE;
					}
					else
					{
						this._ID_PACIENTE = default(Nullable<int>);
					}
					this.SendPropertyChanged("PACIENTES");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIOS_FACTURA_CITAS", Storage="_USUARIOS", ThisKey="ID_USUARIO", OtherKey="ID_USUARIO", IsForeignKey=true)]
		public USUARIOS USUARIOS
		{
			get
			{
				return this._USUARIOS.Entity;
			}
			set
			{
				USUARIOS previousValue = this._USUARIOS.Entity;
				if (((previousValue != value) 
							|| (this._USUARIOS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USUARIOS.Entity = null;
						previousValue.FACTURA_CITAS.Remove(this);
					}
					this._USUARIOS.Entity = value;
					if ((value != null))
					{
						value.FACTURA_CITAS.Add(this);
						this._ID_USUARIO = value.ID_USUARIO;
					}
					else
					{
						this._ID_USUARIO = default(Nullable<int>);
					}
					this.SendPropertyChanged("USUARIOS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HISTORIAL_MEDICO")]
	public partial class HISTORIAL_MEDICO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_HISTORIAL_MEDICO;
		
		private System.Nullable<int> _ID_PACIENTE;
		
		private System.Nullable<bool> _AUMENTO_SED;
		
		private System.Nullable<bool> _ORINA_FRECUENTE;
		
		private System.Nullable<bool> _FATIGA;
		
		private System.Nullable<bool> _VISION_BORROSA;
		
		private System.Nullable<bool> _HERIDAS_LENTAS;
		
		private System.Nullable<bool> _ENFERMEDAD_CARDIACA;
		
		private System.Nullable<bool> _PRESION_ALTA;
		
		private System.Nullable<bool> _COLESTEROL_ALTO;
		
		private System.Nullable<bool> _FAMILIAR_DIABETICO;
		
		private System.Nullable<bool> _REALIZA_EJERCICIO;
		
		private string _FRECUENCIA_EJERCICIO;
		
		private System.Nullable<bool> _COME_AZUCARES;
		
		private System.Nullable<bool> _CAMBIO_APETITO;
		
		private System.Nullable<bool> _DIABETES_GESTIONAL;
		
		private System.Nullable<bool> _BEBE_SOBREPESO;
		
		private EntityRef<PACIENTES> _PACIENTES;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HISTORIAL_MEDICOChanging(int value);
    partial void OnID_HISTORIAL_MEDICOChanged();
    partial void OnID_PACIENTEChanging(System.Nullable<int> value);
    partial void OnID_PACIENTEChanged();
    partial void OnAUMENTO_SEDChanging(System.Nullable<bool> value);
    partial void OnAUMENTO_SEDChanged();
    partial void OnORINA_FRECUENTEChanging(System.Nullable<bool> value);
    partial void OnORINA_FRECUENTEChanged();
    partial void OnFATIGAChanging(System.Nullable<bool> value);
    partial void OnFATIGAChanged();
    partial void OnVISION_BORROSAChanging(System.Nullable<bool> value);
    partial void OnVISION_BORROSAChanged();
    partial void OnHERIDAS_LENTASChanging(System.Nullable<bool> value);
    partial void OnHERIDAS_LENTASChanged();
    partial void OnENFERMEDAD_CARDIACAChanging(System.Nullable<bool> value);
    partial void OnENFERMEDAD_CARDIACAChanged();
    partial void OnPRESION_ALTAChanging(System.Nullable<bool> value);
    partial void OnPRESION_ALTAChanged();
    partial void OnCOLESTEROL_ALTOChanging(System.Nullable<bool> value);
    partial void OnCOLESTEROL_ALTOChanged();
    partial void OnFAMILIAR_DIABETICOChanging(System.Nullable<bool> value);
    partial void OnFAMILIAR_DIABETICOChanged();
    partial void OnREALIZA_EJERCICIOChanging(System.Nullable<bool> value);
    partial void OnREALIZA_EJERCICIOChanged();
    partial void OnFRECUENCIA_EJERCICIOChanging(string value);
    partial void OnFRECUENCIA_EJERCICIOChanged();
    partial void OnCOME_AZUCARESChanging(System.Nullable<bool> value);
    partial void OnCOME_AZUCARESChanged();
    partial void OnCAMBIO_APETITOChanging(System.Nullable<bool> value);
    partial void OnCAMBIO_APETITOChanged();
    partial void OnDIABETES_GESTIONALChanging(System.Nullable<bool> value);
    partial void OnDIABETES_GESTIONALChanged();
    partial void OnBEBE_SOBREPESOChanging(System.Nullable<bool> value);
    partial void OnBEBE_SOBREPESOChanged();
    #endregion
		
		public HISTORIAL_MEDICO()
		{
			this._PACIENTES = default(EntityRef<PACIENTES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HISTORIAL_MEDICO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_HISTORIAL_MEDICO
		{
			get
			{
				return this._ID_HISTORIAL_MEDICO;
			}
			set
			{
				if ((this._ID_HISTORIAL_MEDICO != value))
				{
					this.OnID_HISTORIAL_MEDICOChanging(value);
					this.SendPropertyChanging();
					this._ID_HISTORIAL_MEDICO = value;
					this.SendPropertyChanged("ID_HISTORIAL_MEDICO");
					this.OnID_HISTORIAL_MEDICOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PACIENTE", DbType="Int")]
		public System.Nullable<int> ID_PACIENTE
		{
			get
			{
				return this._ID_PACIENTE;
			}
			set
			{
				if ((this._ID_PACIENTE != value))
				{
					if (this._PACIENTES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PACIENTEChanging(value);
					this.SendPropertyChanging();
					this._ID_PACIENTE = value;
					this.SendPropertyChanged("ID_PACIENTE");
					this.OnID_PACIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AUMENTO_SED", DbType="Bit")]
		public System.Nullable<bool> AUMENTO_SED
		{
			get
			{
				return this._AUMENTO_SED;
			}
			set
			{
				if ((this._AUMENTO_SED != value))
				{
					this.OnAUMENTO_SEDChanging(value);
					this.SendPropertyChanging();
					this._AUMENTO_SED = value;
					this.SendPropertyChanged("AUMENTO_SED");
					this.OnAUMENTO_SEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORINA_FRECUENTE", DbType="Bit")]
		public System.Nullable<bool> ORINA_FRECUENTE
		{
			get
			{
				return this._ORINA_FRECUENTE;
			}
			set
			{
				if ((this._ORINA_FRECUENTE != value))
				{
					this.OnORINA_FRECUENTEChanging(value);
					this.SendPropertyChanging();
					this._ORINA_FRECUENTE = value;
					this.SendPropertyChanged("ORINA_FRECUENTE");
					this.OnORINA_FRECUENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FATIGA", DbType="Bit")]
		public System.Nullable<bool> FATIGA
		{
			get
			{
				return this._FATIGA;
			}
			set
			{
				if ((this._FATIGA != value))
				{
					this.OnFATIGAChanging(value);
					this.SendPropertyChanging();
					this._FATIGA = value;
					this.SendPropertyChanged("FATIGA");
					this.OnFATIGAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VISION_BORROSA", DbType="Bit")]
		public System.Nullable<bool> VISION_BORROSA
		{
			get
			{
				return this._VISION_BORROSA;
			}
			set
			{
				if ((this._VISION_BORROSA != value))
				{
					this.OnVISION_BORROSAChanging(value);
					this.SendPropertyChanging();
					this._VISION_BORROSA = value;
					this.SendPropertyChanged("VISION_BORROSA");
					this.OnVISION_BORROSAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HERIDAS_LENTAS", DbType="Bit")]
		public System.Nullable<bool> HERIDAS_LENTAS
		{
			get
			{
				return this._HERIDAS_LENTAS;
			}
			set
			{
				if ((this._HERIDAS_LENTAS != value))
				{
					this.OnHERIDAS_LENTASChanging(value);
					this.SendPropertyChanging();
					this._HERIDAS_LENTAS = value;
					this.SendPropertyChanged("HERIDAS_LENTAS");
					this.OnHERIDAS_LENTASChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENFERMEDAD_CARDIACA", DbType="Bit")]
		public System.Nullable<bool> ENFERMEDAD_CARDIACA
		{
			get
			{
				return this._ENFERMEDAD_CARDIACA;
			}
			set
			{
				if ((this._ENFERMEDAD_CARDIACA != value))
				{
					this.OnENFERMEDAD_CARDIACAChanging(value);
					this.SendPropertyChanging();
					this._ENFERMEDAD_CARDIACA = value;
					this.SendPropertyChanged("ENFERMEDAD_CARDIACA");
					this.OnENFERMEDAD_CARDIACAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRESION_ALTA", DbType="Bit")]
		public System.Nullable<bool> PRESION_ALTA
		{
			get
			{
				return this._PRESION_ALTA;
			}
			set
			{
				if ((this._PRESION_ALTA != value))
				{
					this.OnPRESION_ALTAChanging(value);
					this.SendPropertyChanging();
					this._PRESION_ALTA = value;
					this.SendPropertyChanged("PRESION_ALTA");
					this.OnPRESION_ALTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COLESTEROL_ALTO", DbType="Bit")]
		public System.Nullable<bool> COLESTEROL_ALTO
		{
			get
			{
				return this._COLESTEROL_ALTO;
			}
			set
			{
				if ((this._COLESTEROL_ALTO != value))
				{
					this.OnCOLESTEROL_ALTOChanging(value);
					this.SendPropertyChanging();
					this._COLESTEROL_ALTO = value;
					this.SendPropertyChanged("COLESTEROL_ALTO");
					this.OnCOLESTEROL_ALTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAMILIAR_DIABETICO", DbType="Bit")]
		public System.Nullable<bool> FAMILIAR_DIABETICO
		{
			get
			{
				return this._FAMILIAR_DIABETICO;
			}
			set
			{
				if ((this._FAMILIAR_DIABETICO != value))
				{
					this.OnFAMILIAR_DIABETICOChanging(value);
					this.SendPropertyChanging();
					this._FAMILIAR_DIABETICO = value;
					this.SendPropertyChanged("FAMILIAR_DIABETICO");
					this.OnFAMILIAR_DIABETICOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REALIZA_EJERCICIO", DbType="Bit")]
		public System.Nullable<bool> REALIZA_EJERCICIO
		{
			get
			{
				return this._REALIZA_EJERCICIO;
			}
			set
			{
				if ((this._REALIZA_EJERCICIO != value))
				{
					this.OnREALIZA_EJERCICIOChanging(value);
					this.SendPropertyChanging();
					this._REALIZA_EJERCICIO = value;
					this.SendPropertyChanged("REALIZA_EJERCICIO");
					this.OnREALIZA_EJERCICIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FRECUENCIA_EJERCICIO", DbType="VarChar(100)")]
		public string FRECUENCIA_EJERCICIO
		{
			get
			{
				return this._FRECUENCIA_EJERCICIO;
			}
			set
			{
				if ((this._FRECUENCIA_EJERCICIO != value))
				{
					this.OnFRECUENCIA_EJERCICIOChanging(value);
					this.SendPropertyChanging();
					this._FRECUENCIA_EJERCICIO = value;
					this.SendPropertyChanged("FRECUENCIA_EJERCICIO");
					this.OnFRECUENCIA_EJERCICIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COME_AZUCARES", DbType="Bit")]
		public System.Nullable<bool> COME_AZUCARES
		{
			get
			{
				return this._COME_AZUCARES;
			}
			set
			{
				if ((this._COME_AZUCARES != value))
				{
					this.OnCOME_AZUCARESChanging(value);
					this.SendPropertyChanging();
					this._COME_AZUCARES = value;
					this.SendPropertyChanged("COME_AZUCARES");
					this.OnCOME_AZUCARESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAMBIO_APETITO", DbType="Bit")]
		public System.Nullable<bool> CAMBIO_APETITO
		{
			get
			{
				return this._CAMBIO_APETITO;
			}
			set
			{
				if ((this._CAMBIO_APETITO != value))
				{
					this.OnCAMBIO_APETITOChanging(value);
					this.SendPropertyChanging();
					this._CAMBIO_APETITO = value;
					this.SendPropertyChanged("CAMBIO_APETITO");
					this.OnCAMBIO_APETITOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIABETES_GESTIONAL", DbType="Bit")]
		public System.Nullable<bool> DIABETES_GESTIONAL
		{
			get
			{
				return this._DIABETES_GESTIONAL;
			}
			set
			{
				if ((this._DIABETES_GESTIONAL != value))
				{
					this.OnDIABETES_GESTIONALChanging(value);
					this.SendPropertyChanging();
					this._DIABETES_GESTIONAL = value;
					this.SendPropertyChanged("DIABETES_GESTIONAL");
					this.OnDIABETES_GESTIONALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BEBE_SOBREPESO", DbType="Bit")]
		public System.Nullable<bool> BEBE_SOBREPESO
		{
			get
			{
				return this._BEBE_SOBREPESO;
			}
			set
			{
				if ((this._BEBE_SOBREPESO != value))
				{
					this.OnBEBE_SOBREPESOChanging(value);
					this.SendPropertyChanging();
					this._BEBE_SOBREPESO = value;
					this.SendPropertyChanged("BEBE_SOBREPESO");
					this.OnBEBE_SOBREPESOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTES_HISTORIAL_MEDICO", Storage="_PACIENTES", ThisKey="ID_PACIENTE", OtherKey="ID_PACIENTE", IsForeignKey=true)]
		public PACIENTES PACIENTES
		{
			get
			{
				return this._PACIENTES.Entity;
			}
			set
			{
				PACIENTES previousValue = this._PACIENTES.Entity;
				if (((previousValue != value) 
							|| (this._PACIENTES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENTES.Entity = null;
						previousValue.HISTORIAL_MEDICO.Remove(this);
					}
					this._PACIENTES.Entity = value;
					if ((value != null))
					{
						value.HISTORIAL_MEDICO.Add(this);
						this._ID_PACIENTE = value.ID_PACIENTE;
					}
					else
					{
						this._ID_PACIENTE = default(Nullable<int>);
					}
					this.SendPropertyChanged("PACIENTES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEDICAMENTOS")]
	public partial class MEDICAMENTOS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_MEDICAMENTO;
		
		private string _NOMBRE;
		
		private EntitySet<MEDIDAS> _MEDIDAS;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MEDICAMENTOChanging(int value);
    partial void OnID_MEDICAMENTOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public MEDICAMENTOS()
		{
			this._MEDIDAS = new EntitySet<MEDIDAS>(new Action<MEDIDAS>(this.attach_MEDIDAS), new Action<MEDIDAS>(this.detach_MEDIDAS));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MEDICAMENTO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_MEDICAMENTO
		{
			get
			{
				return this._ID_MEDICAMENTO;
			}
			set
			{
				if ((this._ID_MEDICAMENTO != value))
				{
					this.OnID_MEDICAMENTOChanging(value);
					this.SendPropertyChanging();
					this._ID_MEDICAMENTO = value;
					this.SendPropertyChanged("ID_MEDICAMENTO");
					this.OnID_MEDICAMENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(100)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICAMENTOS_MEDIDAS", Storage="_MEDIDAS", ThisKey="ID_MEDICAMENTO", OtherKey="ID_MEDICAMENTO")]
		public EntitySet<MEDIDAS> MEDIDAS
		{
			get
			{
				return this._MEDIDAS;
			}
			set
			{
				this._MEDIDAS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MEDIDAS(MEDIDAS entity)
		{
			this.SendPropertyChanging();
			entity.MEDICAMENTOS = this;
		}
		
		private void detach_MEDIDAS(MEDIDAS entity)
		{
			this.SendPropertyChanging();
			entity.MEDICAMENTOS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEDIDAS")]
	public partial class MEDIDAS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _ID_TIPO;
		
		private System.Nullable<int> _ID_MEDICAMENTO;
		
		private string _MEDIDA;
		
		private int _ID_MEDIDA;
		
		private EntitySet<ALERTAS> _ALERTAS;
		
		private EntityRef<MEDICAMENTOS> _MEDICAMENTOS;
		
		private EntityRef<TIPO_DIABETES> _TIPO_DIABETES;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TIPOChanging(System.Nullable<int> value);
    partial void OnID_TIPOChanged();
    partial void OnID_MEDICAMENTOChanging(System.Nullable<int> value);
    partial void OnID_MEDICAMENTOChanged();
    partial void OnMEDIDAChanging(string value);
    partial void OnMEDIDAChanged();
    partial void OnID_MEDIDAChanging(int value);
    partial void OnID_MEDIDAChanged();
    #endregion
		
		public MEDIDAS()
		{
			this._ALERTAS = new EntitySet<ALERTAS>(new Action<ALERTAS>(this.attach_ALERTAS), new Action<ALERTAS>(this.detach_ALERTAS));
			this._MEDICAMENTOS = default(EntityRef<MEDICAMENTOS>);
			this._TIPO_DIABETES = default(EntityRef<TIPO_DIABETES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIPO", DbType="Int")]
		public System.Nullable<int> ID_TIPO
		{
			get
			{
				return this._ID_TIPO;
			}
			set
			{
				if ((this._ID_TIPO != value))
				{
					if (this._TIPO_DIABETES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TIPOChanging(value);
					this.SendPropertyChanging();
					this._ID_TIPO = value;
					this.SendPropertyChanged("ID_TIPO");
					this.OnID_TIPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MEDICAMENTO", DbType="Int")]
		public System.Nullable<int> ID_MEDICAMENTO
		{
			get
			{
				return this._ID_MEDICAMENTO;
			}
			set
			{
				if ((this._ID_MEDICAMENTO != value))
				{
					if (this._MEDICAMENTOS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MEDICAMENTOChanging(value);
					this.SendPropertyChanging();
					this._ID_MEDICAMENTO = value;
					this.SendPropertyChanged("ID_MEDICAMENTO");
					this.OnID_MEDICAMENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEDIDA", DbType="VarChar(50)")]
		public string MEDIDA
		{
			get
			{
				return this._MEDIDA;
			}
			set
			{
				if ((this._MEDIDA != value))
				{
					this.OnMEDIDAChanging(value);
					this.SendPropertyChanging();
					this._MEDIDA = value;
					this.SendPropertyChanged("MEDIDA");
					this.OnMEDIDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MEDIDA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_MEDIDA
		{
			get
			{
				return this._ID_MEDIDA;
			}
			set
			{
				if ((this._ID_MEDIDA != value))
				{
					this.OnID_MEDIDAChanging(value);
					this.SendPropertyChanging();
					this._ID_MEDIDA = value;
					this.SendPropertyChanged("ID_MEDIDA");
					this.OnID_MEDIDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDIDAS_ALERTAS", Storage="_ALERTAS", ThisKey="ID_MEDIDA", OtherKey="ID_MEDIDAS")]
		public EntitySet<ALERTAS> ALERTAS
		{
			get
			{
				return this._ALERTAS;
			}
			set
			{
				this._ALERTAS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICAMENTOS_MEDIDAS", Storage="_MEDICAMENTOS", ThisKey="ID_MEDICAMENTO", OtherKey="ID_MEDICAMENTO", IsForeignKey=true)]
		public MEDICAMENTOS MEDICAMENTOS
		{
			get
			{
				return this._MEDICAMENTOS.Entity;
			}
			set
			{
				MEDICAMENTOS previousValue = this._MEDICAMENTOS.Entity;
				if (((previousValue != value) 
							|| (this._MEDICAMENTOS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MEDICAMENTOS.Entity = null;
						previousValue.MEDIDAS.Remove(this);
					}
					this._MEDICAMENTOS.Entity = value;
					if ((value != null))
					{
						value.MEDIDAS.Add(this);
						this._ID_MEDICAMENTO = value.ID_MEDICAMENTO;
					}
					else
					{
						this._ID_MEDICAMENTO = default(Nullable<int>);
					}
					this.SendPropertyChanged("MEDICAMENTOS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_DIABETES_MEDIDAS", Storage="_TIPO_DIABETES", ThisKey="ID_TIPO", OtherKey="ID_TIPO", IsForeignKey=true)]
		public TIPO_DIABETES TIPO_DIABETES
		{
			get
			{
				return this._TIPO_DIABETES.Entity;
			}
			set
			{
				TIPO_DIABETES previousValue = this._TIPO_DIABETES.Entity;
				if (((previousValue != value) 
							|| (this._TIPO_DIABETES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPO_DIABETES.Entity = null;
						previousValue.MEDIDAS.Remove(this);
					}
					this._TIPO_DIABETES.Entity = value;
					if ((value != null))
					{
						value.MEDIDAS.Add(this);
						this._ID_TIPO = value.ID_TIPO;
					}
					else
					{
						this._ID_TIPO = default(Nullable<int>);
					}
					this.SendPropertyChanged("TIPO_DIABETES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ALERTAS(ALERTAS entity)
		{
			this.SendPropertyChanging();
			entity.MEDIDAS = this;
		}
		
		private void detach_ALERTAS(ALERTAS entity)
		{
			this.SendPropertyChanging();
			entity.MEDIDAS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PACIENTES")]
	public partial class PACIENTES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PACIENTE;
		
		private string _NOMBRES;
		
		private string _APELLIDOS;
		
		private System.Nullable<int> _EDAD;
		
		private string _GENERO;
		
		private System.Nullable<System.DateTime> _FECHA_NACIMIENTO;
		
		private string _DIRECCION;
		
		private System.Nullable<int> _TELEFONO1;
		
		private System.Nullable<int> _TELEFONO2;
		
		private System.Nullable<System.DateTime> _FECHA_REGISTRO;
		
		private EntitySet<ALERTAS> _ALERTAS;
		
		private EntitySet<CITAS> _CITAS;
		
		private EntitySet<ENCARGADOS> _ENCARGADOS;
		
		private EntitySet<FACTURA_CITAS> _FACTURA_CITAS;
		
		private EntitySet<HISTORIAL_MEDICO> _HISTORIAL_MEDICO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PACIENTEChanging(int value);
    partial void OnID_PACIENTEChanged();
    partial void OnNOMBRESChanging(string value);
    partial void OnNOMBRESChanged();
    partial void OnAPELLIDOSChanging(string value);
    partial void OnAPELLIDOSChanged();
    partial void OnEDADChanging(System.Nullable<int> value);
    partial void OnEDADChanged();
    partial void OnGENEROChanging(string value);
    partial void OnGENEROChanged();
    partial void OnFECHA_NACIMIENTOChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHA_NACIMIENTOChanged();
    partial void OnDIRECCIONChanging(string value);
    partial void OnDIRECCIONChanged();
    partial void OnTELEFONO1Changing(System.Nullable<int> value);
    partial void OnTELEFONO1Changed();
    partial void OnTELEFONO2Changing(System.Nullable<int> value);
    partial void OnTELEFONO2Changed();
    partial void OnFECHA_REGISTROChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHA_REGISTROChanged();
    #endregion
		
		public PACIENTES()
		{
			this._ALERTAS = new EntitySet<ALERTAS>(new Action<ALERTAS>(this.attach_ALERTAS), new Action<ALERTAS>(this.detach_ALERTAS));
			this._CITAS = new EntitySet<CITAS>(new Action<CITAS>(this.attach_CITAS), new Action<CITAS>(this.detach_CITAS));
			this._ENCARGADOS = new EntitySet<ENCARGADOS>(new Action<ENCARGADOS>(this.attach_ENCARGADOS), new Action<ENCARGADOS>(this.detach_ENCARGADOS));
			this._FACTURA_CITAS = new EntitySet<FACTURA_CITAS>(new Action<FACTURA_CITAS>(this.attach_FACTURA_CITAS), new Action<FACTURA_CITAS>(this.detach_FACTURA_CITAS));
			this._HISTORIAL_MEDICO = new EntitySet<HISTORIAL_MEDICO>(new Action<HISTORIAL_MEDICO>(this.attach_HISTORIAL_MEDICO), new Action<HISTORIAL_MEDICO>(this.detach_HISTORIAL_MEDICO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PACIENTE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PACIENTE
		{
			get
			{
				return this._ID_PACIENTE;
			}
			set
			{
				if ((this._ID_PACIENTE != value))
				{
					this.OnID_PACIENTEChanging(value);
					this.SendPropertyChanging();
					this._ID_PACIENTE = value;
					this.SendPropertyChanged("ID_PACIENTE");
					this.OnID_PACIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRES", DbType="VarChar(100)")]
		public string NOMBRES
		{
			get
			{
				return this._NOMBRES;
			}
			set
			{
				if ((this._NOMBRES != value))
				{
					this.OnNOMBRESChanging(value);
					this.SendPropertyChanging();
					this._NOMBRES = value;
					this.SendPropertyChanged("NOMBRES");
					this.OnNOMBRESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APELLIDOS", DbType="VarChar(100)")]
		public string APELLIDOS
		{
			get
			{
				return this._APELLIDOS;
			}
			set
			{
				if ((this._APELLIDOS != value))
				{
					this.OnAPELLIDOSChanging(value);
					this.SendPropertyChanging();
					this._APELLIDOS = value;
					this.SendPropertyChanged("APELLIDOS");
					this.OnAPELLIDOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDAD", DbType="Int")]
		public System.Nullable<int> EDAD
		{
			get
			{
				return this._EDAD;
			}
			set
			{
				if ((this._EDAD != value))
				{
					this.OnEDADChanging(value);
					this.SendPropertyChanging();
					this._EDAD = value;
					this.SendPropertyChanged("EDAD");
					this.OnEDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENERO", DbType="VarChar(50)")]
		public string GENERO
		{
			get
			{
				return this._GENERO;
			}
			set
			{
				if ((this._GENERO != value))
				{
					this.OnGENEROChanging(value);
					this.SendPropertyChanging();
					this._GENERO = value;
					this.SendPropertyChanged("GENERO");
					this.OnGENEROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA_NACIMIENTO", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHA_NACIMIENTO
		{
			get
			{
				return this._FECHA_NACIMIENTO;
			}
			set
			{
				if ((this._FECHA_NACIMIENTO != value))
				{
					this.OnFECHA_NACIMIENTOChanging(value);
					this.SendPropertyChanging();
					this._FECHA_NACIMIENTO = value;
					this.SendPropertyChanged("FECHA_NACIMIENTO");
					this.OnFECHA_NACIMIENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIRECCION", DbType="VarChar(150)")]
		public string DIRECCION
		{
			get
			{
				return this._DIRECCION;
			}
			set
			{
				if ((this._DIRECCION != value))
				{
					this.OnDIRECCIONChanging(value);
					this.SendPropertyChanging();
					this._DIRECCION = value;
					this.SendPropertyChanged("DIRECCION");
					this.OnDIRECCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONO1", DbType="Int")]
		public System.Nullable<int> TELEFONO1
		{
			get
			{
				return this._TELEFONO1;
			}
			set
			{
				if ((this._TELEFONO1 != value))
				{
					this.OnTELEFONO1Changing(value);
					this.SendPropertyChanging();
					this._TELEFONO1 = value;
					this.SendPropertyChanged("TELEFONO1");
					this.OnTELEFONO1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONO2", DbType="Int")]
		public System.Nullable<int> TELEFONO2
		{
			get
			{
				return this._TELEFONO2;
			}
			set
			{
				if ((this._TELEFONO2 != value))
				{
					this.OnTELEFONO2Changing(value);
					this.SendPropertyChanging();
					this._TELEFONO2 = value;
					this.SendPropertyChanged("TELEFONO2");
					this.OnTELEFONO2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA_REGISTRO", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHA_REGISTRO
		{
			get
			{
				return this._FECHA_REGISTRO;
			}
			set
			{
				if ((this._FECHA_REGISTRO != value))
				{
					this.OnFECHA_REGISTROChanging(value);
					this.SendPropertyChanging();
					this._FECHA_REGISTRO = value;
					this.SendPropertyChanged("FECHA_REGISTRO");
					this.OnFECHA_REGISTROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTES_ALERTAS", Storage="_ALERTAS", ThisKey="ID_PACIENTE", OtherKey="ID_PACIENTE")]
		public EntitySet<ALERTAS> ALERTAS
		{
			get
			{
				return this._ALERTAS;
			}
			set
			{
				this._ALERTAS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTES_CITAS", Storage="_CITAS", ThisKey="ID_PACIENTE", OtherKey="ID_PACIENTE")]
		public EntitySet<CITAS> CITAS
		{
			get
			{
				return this._CITAS;
			}
			set
			{
				this._CITAS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTES_ENCARGADOS", Storage="_ENCARGADOS", ThisKey="ID_PACIENTE", OtherKey="ID_PACIENTE")]
		public EntitySet<ENCARGADOS> ENCARGADOS
		{
			get
			{
				return this._ENCARGADOS;
			}
			set
			{
				this._ENCARGADOS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTES_FACTURA_CITAS", Storage="_FACTURA_CITAS", ThisKey="ID_PACIENTE", OtherKey="ID_PACIENTE")]
		public EntitySet<FACTURA_CITAS> FACTURA_CITAS
		{
			get
			{
				return this._FACTURA_CITAS;
			}
			set
			{
				this._FACTURA_CITAS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTES_HISTORIAL_MEDICO", Storage="_HISTORIAL_MEDICO", ThisKey="ID_PACIENTE", OtherKey="ID_PACIENTE")]
		public EntitySet<HISTORIAL_MEDICO> HISTORIAL_MEDICO
		{
			get
			{
				return this._HISTORIAL_MEDICO;
			}
			set
			{
				this._HISTORIAL_MEDICO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ALERTAS(ALERTAS entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTES = this;
		}
		
		private void detach_ALERTAS(ALERTAS entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTES = null;
		}
		
		private void attach_CITAS(CITAS entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTES = this;
		}
		
		private void detach_CITAS(CITAS entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTES = null;
		}
		
		private void attach_ENCARGADOS(ENCARGADOS entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTES = this;
		}
		
		private void detach_ENCARGADOS(ENCARGADOS entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTES = null;
		}
		
		private void attach_FACTURA_CITAS(FACTURA_CITAS entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTES = this;
		}
		
		private void detach_FACTURA_CITAS(FACTURA_CITAS entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTES = null;
		}
		
		private void attach_HISTORIAL_MEDICO(HISTORIAL_MEDICO entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTES = this;
		}
		
		private void detach_HISTORIAL_MEDICO(HISTORIAL_MEDICO entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTES = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PACIENTES_EXAMENES")]
	public partial class PACIENTES_EXAMENES
	{
		
		private System.Nullable<int> _ID_PACIENTE;
		
		private System.Nullable<int> _ID_EXAMEN;
		
		public PACIENTES_EXAMENES()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PACIENTE", DbType="Int")]
		public System.Nullable<int> ID_PACIENTE
		{
			get
			{
				return this._ID_PACIENTE;
			}
			set
			{
				if ((this._ID_PACIENTE != value))
				{
					this._ID_PACIENTE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_EXAMEN", DbType="Int")]
		public System.Nullable<int> ID_EXAMEN
		{
			get
			{
				return this._ID_EXAMEN;
			}
			set
			{
				if ((this._ID_EXAMEN != value))
				{
					this._ID_EXAMEN = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPO_DIABETES")]
	public partial class TIPO_DIABETES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TIPO;
		
		private string _NOMBRE;
		
		private EntitySet<MEDIDAS> _MEDIDAS;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TIPOChanging(int value);
    partial void OnID_TIPOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public TIPO_DIABETES()
		{
			this._MEDIDAS = new EntitySet<MEDIDAS>(new Action<MEDIDAS>(this.attach_MEDIDAS), new Action<MEDIDAS>(this.detach_MEDIDAS));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIPO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TIPO
		{
			get
			{
				return this._ID_TIPO;
			}
			set
			{
				if ((this._ID_TIPO != value))
				{
					this.OnID_TIPOChanging(value);
					this.SendPropertyChanging();
					this._ID_TIPO = value;
					this.SendPropertyChanged("ID_TIPO");
					this.OnID_TIPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_DIABETES_MEDIDAS", Storage="_MEDIDAS", ThisKey="ID_TIPO", OtherKey="ID_TIPO")]
		public EntitySet<MEDIDAS> MEDIDAS
		{
			get
			{
				return this._MEDIDAS;
			}
			set
			{
				this._MEDIDAS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MEDIDAS(MEDIDAS entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_DIABETES = this;
		}
		
		private void detach_MEDIDAS(MEDIDAS entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_DIABETES = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USUARIOS")]
	public partial class USUARIOS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_USUARIO;
		
		private string _NOMBRES;
		
		private string _APELLIDOS;
		
		private string _USUARIO;
		
		private string _CONTRASEÑA;
		
		private EntitySet<FACTURA_CITAS> _FACTURA_CITAS;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_USUARIOChanging(int value);
    partial void OnID_USUARIOChanged();
    partial void OnNOMBRESChanging(string value);
    partial void OnNOMBRESChanged();
    partial void OnAPELLIDOSChanging(string value);
    partial void OnAPELLIDOSChanged();
    partial void OnUSUARIOChanging(string value);
    partial void OnUSUARIOChanged();
    partial void OnCONTRASEÑAChanging(string value);
    partial void OnCONTRASEÑAChanged();
    #endregion
		
		public USUARIOS()
		{
			this._FACTURA_CITAS = new EntitySet<FACTURA_CITAS>(new Action<FACTURA_CITAS>(this.attach_FACTURA_CITAS), new Action<FACTURA_CITAS>(this.detach_FACTURA_CITAS));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USUARIO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_USUARIO
		{
			get
			{
				return this._ID_USUARIO;
			}
			set
			{
				if ((this._ID_USUARIO != value))
				{
					this.OnID_USUARIOChanging(value);
					this.SendPropertyChanging();
					this._ID_USUARIO = value;
					this.SendPropertyChanged("ID_USUARIO");
					this.OnID_USUARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRES", DbType="VarChar(150)")]
		public string NOMBRES
		{
			get
			{
				return this._NOMBRES;
			}
			set
			{
				if ((this._NOMBRES != value))
				{
					this.OnNOMBRESChanging(value);
					this.SendPropertyChanging();
					this._NOMBRES = value;
					this.SendPropertyChanged("NOMBRES");
					this.OnNOMBRESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APELLIDOS", DbType="VarChar(150)")]
		public string APELLIDOS
		{
			get
			{
				return this._APELLIDOS;
			}
			set
			{
				if ((this._APELLIDOS != value))
				{
					this.OnAPELLIDOSChanging(value);
					this.SendPropertyChanging();
					this._APELLIDOS = value;
					this.SendPropertyChanged("APELLIDOS");
					this.OnAPELLIDOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USUARIO", DbType="VarChar(100)")]
		public string USUARIO
		{
			get
			{
				return this._USUARIO;
			}
			set
			{
				if ((this._USUARIO != value))
				{
					this.OnUSUARIOChanging(value);
					this.SendPropertyChanging();
					this._USUARIO = value;
					this.SendPropertyChanged("USUARIO");
					this.OnUSUARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTRASEÑA", DbType="VarChar(50)")]
		public string CONTRASEÑA
		{
			get
			{
				return this._CONTRASEÑA;
			}
			set
			{
				if ((this._CONTRASEÑA != value))
				{
					this.OnCONTRASEÑAChanging(value);
					this.SendPropertyChanging();
					this._CONTRASEÑA = value;
					this.SendPropertyChanged("CONTRASEÑA");
					this.OnCONTRASEÑAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIOS_FACTURA_CITAS", Storage="_FACTURA_CITAS", ThisKey="ID_USUARIO", OtherKey="ID_USUARIO")]
		public EntitySet<FACTURA_CITAS> FACTURA_CITAS
		{
			get
			{
				return this._FACTURA_CITAS;
			}
			set
			{
				this._FACTURA_CITAS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FACTURA_CITAS(FACTURA_CITAS entity)
		{
			this.SendPropertyChanging();
			entity.USUARIOS = this;
		}
		
		private void detach_FACTURA_CITAS(FACTURA_CITAS entity)
		{
			this.SendPropertyChanging();
			entity.USUARIOS = null;
		}
	}
}
#pragma warning restore 1591
